pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL       = "http://43.205.198.169:9000"
    DOCKER_REGISTRY = "https://index.docker.io/v1/"
    DOCKER_IMAGE    = "harshkadam7474/jenkin-project-with-java" 
    GIT_REPO_NAME   = "jenkin-project-with-java"
    GIT_USER_NAME   = "devops-harsh"
    GIT_EMAIL       = "harshkadam7474@gmail.com"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh '''
            cd spring-boot-app
            docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}:${BUILD_NUMBER}")
          docker.withRegistry("${DOCKER_REGISTRY}", "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "${GIT_EMAIL}"
            git config user.name "${GIT_USER_NAME}"

            sed -i "s|replaceImageTag|${BUILD_NUMBER}|g" spring-boot-app-manifests/deployment.yml

            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
